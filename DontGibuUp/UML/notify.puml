@startuml
interface kr.spring.notify.service.NotifyService {
+ void insertNotifyLog(NotifyVO,Map<String,String>)
+ List<NotifyVO> selectNotListByMemNum(long)
+ int countUnreadNot(long)
+ void readNotifyLog(long)
}

interface kr.spring.notify.dao.NotifyMapper {
+ void insertNotifyLog(NotifyVO)
+ List<NotifyVO> selectNotListByMemNum(long)
+ int countUnreadNot(long)
+ void readNotifyLog(long)
+ String selectNotifyTemplate(int)
+ void insertNotifyLog(NotifyVO,Map<String,String>)
}

class kr.spring.notify.vo.NotifyVO {
- long not_num
- long mem_num
- int notify_type
- String not_message
- String not_url
- String not_datetime
- Date not_read_datetime
}

class kr.spring.notify.service.NotifyServiceImpl {
~ NotifyMapper notifyMapper
+ void insertNotifyLog(NotifyVO,Map<String,String>)
+ List<NotifyVO> selectNotListByMemNum(long)
+ int countUnreadNot(long)
+ void readNotifyLog(long)
- String generateNotifyMessage(NotifyVO,Map<String,String>)
}




kr.spring.notify.service.NotifyService <|.. kr.spring.notify.service.NotifyServiceImpl
@enduml