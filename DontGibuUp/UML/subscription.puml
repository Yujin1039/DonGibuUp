@startuml
interface kr.spring.subscription.service.SubscriptionService {
+ long getSub_num()
+ void insertSubscription(SubscriptionVO)
+ void endSubscription(long)
+ SubscriptionVO getSubscriptionBySub_num(long)
+ void deleteSubscription(long)
+ int getTodayDate()
+ String getImpKeys(int)
+ String getImpSecret(int)
+ String getToken(int)
+ List<SubscriptionVO> getSubscriptionByDay(int)
+ void updateSub_status(long)
+ List<SubscriptionVO> getSubscriptionByMem_numWithCategories(long)
+ int getSubscriptionCountbyMem_num(long)
+ void modifyPayMethod(SubscriptionVO)
+ List<SubscriptionVO> getSubscriptionByD1(int)
+ int getSubscriptionCount(Map<String,Object>)
+ List<SubscriptionVO> getSubscription(Map<String,Object>)
+ long getPurchase_num(String)
+ long getDboxDoNum(String)
}

class kr.spring.subscription.vo.GetTokenVO {
- String access_token
- long now
- long expired_at
}

interface kr.spring.subscription.dao.SubscriptionMapper {
+ long getSub_num()
+ void insertSubscription(SubscriptionVO)
+ SubscriptionVO getSubscriptionBySub_num(long)
+ void endSubscription(long)
+ void modifyPayMethod(SubscriptionVO)
+ void updateSub_status(long)
+ int getSubscriptionCountbyMem_num(long)
+ List<SubscriptionVO> getSubscriptionByMem_num(long)
+ int getSubscriptionCount(Map<String,Object>)
+ List<SubscriptionVO> getSubscription(Map<String,Object>)
+ void deleteSubscription(long)
+ String getImpKeys(int)
+ String getImpSecret(int)
+ List<SubscriptionVO> getSubscriptionByDay(int)
+ List<SubscriptionVO> getSubscriptionByD1(int)
+ long getPurchase_num(String)
+ long getDboxDoNum(String)
}

class kr.spring.subscription.vo.SubscriptionVO {
- long sub_num
- long mem_num
- long dcate_num
- String sub_name
- boolean sub_annoy
- int sub_price
- int sub_ndate
- int sub_status
- String sub_method
- String easypay_method
- String card_nickname
- String reg_date
- String cancel_date
- String dcate_charity
- String dcate_name
- DonationCategoryVO donationCategory
}

interface kr.spring.subscription.dao.Sub_paymentMapper {
+ long getSub_payment_num()
+ void insertSub_payment(Sub_paymentVO)
+ Sub_paymentVO getSub_paymentByDate(long)
+ List<Sub_paymentVO> getSub_payment()
+ int getSub_paymentCountByMem_num(Map<String,Object>)
+ List<Sub_paymentVO> getSub_paymentByMem_num(Map<String,Object>)
+ List<Sub_paymentVO> getSub_paymentBySub_num(long)
+ void updateSubPayStatus(long,long)
}

interface kr.spring.subscription.service.Sub_paymentService {
+ void insertSub_payment(Sub_paymentVO)
+ long getSub_payment_num()
+ Sub_paymentVO getSub_paymentByDate(long)
+ List<Sub_paymentVO> getSub_payment()
+ int getSub_paymentCountByMem_num(Map<String,Object>)
+ List<Sub_paymentVO> getSub_paymentByMem_num(Map<String,Object>)
+ List<Sub_paymentVO> getSub_paymentBySub_num(long)
+ void updateSubPayStatus(long,long)
}

class kr.spring.subscription.service.Sub_paymentServiceImpl {
~ Sub_paymentMapper Sub_paymentMapper
+ void insertSub_payment(Sub_paymentVO)
+ long getSub_payment_num()
+ Sub_paymentVO getSub_paymentByDate(long)
+ List<Sub_paymentVO> getSub_payment()
+ List<Sub_paymentVO> getSub_paymentByMem_num(Map<String,Object>)
+ int getSub_paymentCountByMem_num(Map<String,Object>)
+ List<Sub_paymentVO> getSub_paymentBySub_num(long)
+ void updateSubPayStatus(long,long)
}


class kr.spring.subscription.service.SubscriptionServiceImpl {
- SubscriptionMapper subscriptionMapper
- CategoryMapper categoryMapper
+ String getToken(int)
+ String getImpKeys(int)
+ String getImpSecret(int)
+ long getSub_num()
+ void insertSubscription(SubscriptionVO)
+ void endSubscription(long)
+ SubscriptionVO getSubscriptionBySub_num(long)
+ void deleteSubscription(long)
+ int getTodayDate()
+ List<SubscriptionVO> getSubscriptionByDay(int)
+ void updateSub_status(long)
+ List<SubscriptionVO> getSubscriptionByMem_numWithCategories(long)
+ int getSubscriptionCountbyMem_num(long)
+ void modifyPayMethod(SubscriptionVO)
+ List<SubscriptionVO> getSubscriptionByD1(int)
+ int getSubscriptionCount(Map<String,Object>)
+ List<SubscriptionVO> getSubscription(Map<String,Object>)
+ long getPurchase_num(String)
+ long getDboxDoNum(String)
}


class kr.spring.subscription.controller.SubscriptionController {
- SubscriptionService subscriptionService
- PayuidService payuidService
- CategoryService categoryService
- MemberService memberService
- Sub_paymentService sub_paymentService
~ NotifyService notifyService
~ CSService csService
~ RefundService refundService
~ GoodsService goodsService
~ DboxService dboxService
- IamportClient impClient
- String apiKey
- String secretKey
+ void initImp()
+ String subScriptionMain(Model)
+ String signup(SubscriptionVO,Model,HttpServletRequest,HttpSession,RedirectAttributes,String)
+ String getpayuid(MemberVO,PayuidVO,SubscriptionVO,Model)
+ Map getNewpayuid(SubscriptionVO,Model,HttpServletRequest,RedirectAttributes)
+ ResponseEntity<Map<String,String>> signUp(String,long)
+ String showResult(Model)
+ Map<String,String> deletePayuid(String,long,HttpSession)
+ String insertSub_Payment(String,long)
+ void SubscriptionPayment()
+ void performDailyTask()
+ {static} int getNextDayOfMonthAsInt(LocalDate)
+ String subscriptionList(HttpSession,Model,int,String,String,String)
+ String paymentHistory(HttpSession,Model,int,String,String,String)
+ ModelAndView subscriptionDetail(long,Model)
+ Map<String,String> updateSub_status(long,HttpSession)
+ String getListRefund(HttpSession,Model,int,int)
+ String getSubscriptionList(HttpSession,Model,int,String,String)
+ Map<String,String> insertRefund(HttpServletRequest,HttpSession,RefundVO,long)
+ Map<String,String> refund(RefundVO,HttpSession)
+ Map<String,String> approvalRefund(RefundVO,HttpSession)
+ Map<String,String> insertRefundByType(HttpServletRequest,HttpSession,RefundVO)
}


class kr.spring.subscription.vo.Sub_paymentVO {
- long sub_pay_num
- long mem_num
- long sub_num
- int sub_price
- String sub_pay_date
- int sub_pay_status
- long dcate_num
- String dcate_name
- String dcate_charity
- String sub_method
- String easypay_method
- String card_nickname
}



kr.spring.subscription.service.Sub_paymentService <|.. kr.spring.subscription.service.Sub_paymentServiceImpl
kr.spring.subscription.service.SubscriptionService <|.. kr.spring.subscription.service.SubscriptionServiceImpl
@enduml