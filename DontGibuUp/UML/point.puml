@startuml
interface kr.spring.point.service.PointService {
+ void insertPointLog(PointVO)
+ List<PointVO> getMemberPointList(Map<String,Object>)
+ Integer getMPointRowCount(Map<String,Object>)
+ void updateMemPointByAdmin(PointVO)
}

interface kr.spring.point.dao.PointMapper {
+ void insertPointLog(PointVO)
+ List<PointVO> getMemberPointList(Map<String,Object>)
+ Integer getMPointRowCount(Map<String,Object>)
}

class kr.spring.point.service.PointServiceImpl {
~ PointMapper pointMapper
~ MemberMapper memberMapper
+ void insertPointLog(PointVO)
+ List<PointVO> getMemberPointList(Map<String,Object>)
+ Integer getMPointRowCount(Map<String,Object>)
+ void updateMemPointByAdmin(PointVO)
}


class kr.spring.point.vo.PointVO {
+ long point_num
+ long mem_num
+ int pevent_type
+ int point_amount
+ String pevent_detail
+ Date point_date
+ <<Create>> PointVO(int,int)
+ <<Create>> PointVO(int,int,long)
}




kr.spring.point.service.PointService <|.. kr.spring.point.service.PointServiceImpl
@enduml