@startuml
class kr.spring.refund.service.RefundServiceImpl {
~ RefundMapper refundMapper
+ void insertRefund(RefundVO)
+ List<RefundVO> getRefundList(Map<String,Object>)
+ List<RefundVO> getRefundListByMemnum(Map<String,Object>)
+ void deleteRefund(long)
+ void updateRefundStatus(long,int)
+ int getRefundCount(Map<String,Object>)
+ RefundVO getRefundVOByReNum(long)
}


interface kr.spring.refund.dao.RefundMapper {
+ void insertRefund(RefundVO)
+ int getRefundCount(Map<String,Object>)
+ List<RefundVO> getRefundList(Map<String,Object>)
+ List<RefundVO> getRefundListByMemnum(Map<String,Object>)
+ void deleteRefund(long)
+ RefundVO getRefundVOByReNum(long)
+ void updateRefundStatus(long,int)
}

class kr.spring.refund.vo.RefundVO {
- long refund_num
- long mem_num
- int payment_type
- String imp_uid
- int amount
- int reason
- String reason_other
- int return_point
- String reg_date
- String refund_date
- int refund_status
- long id
}

interface kr.spring.refund.service.RefundService {
+ void insertRefund(RefundVO)
+ int getRefundCount(Map<String,Object>)
+ List<RefundVO> getRefundList(Map<String,Object>)
+ List<RefundVO> getRefundListByMemnum(Map<String,Object>)
+ RefundVO getRefundVOByReNum(long)
+ void deleteRefund(long)
+ void updateRefundStatus(long,int)
}



kr.spring.refund.service.RefundService <|.. kr.spring.refund.service.RefundServiceImpl
@enduml