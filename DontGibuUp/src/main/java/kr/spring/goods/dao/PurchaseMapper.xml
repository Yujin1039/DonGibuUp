<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper   
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"   
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.spring.goods.dao.PurchaseMapper">
     <!-- 개별 구매를 위한 SQL -->
    <insert id="insertPurchase" parameterType="kr.spring.goods.vo.PurchaseVO">
        INSERT INTO purchase 
        (purchase_num, mem_num, imp_uid, pay_price, pay_date, pay_status, item_num, delivery_status)
        VALUES 
        (purchase_seq.nextval, #{memNum}, #{imp_uid}, #{amount}, SYSDATE, #{status}, #{item_num}, '배송 준비 중')
    </insert>

    <!-- 장바구니 선택 항목 구매를 위한 SQL -->
    <insert id="insertPurchaseWithCartItems" parameterType="kr.spring.goods.vo.PurchaseVO">
        INSERT INTO purchase 
        (purchase_num, mem_num, imp_uid, pay_price, pay_date, pay_status, item_num, delivery_status)
        VALUES 
        (purchase_seq.nextval, #{memNum}, #{imp_uid}, #{amount}, SYSDATE, #{status}, NULL, '배송 준비 중')
    </insert>

    <!-- 장바구니 선택 항목 구매 아이템 추가 SQL -->

    <select id="getPurchaseListByMember" parameterType="long" resultType="kr.spring.goods.vo.PurchaseVO">
        SELECT p.purchase_num, p.mem_num, p.item_num, i.item_name, i.item_photo, p.imp_uid, p.pay_price AS amount, p.pay_date AS payDate, p.pay_status AS payStatus, p.delivery_status AS deliveryStatus
        FROM purchase p
        JOIN item i ON p.item_num = i.item_num
        WHERE p.mem_num = #{memNum}
    </select>

    <select id="getPurchaseItems" parameterType="long" resultType="kr.spring.cart.vo.CartVO">
        SELECT pi.item_num, pi.cart_quantity, pi.item_price, i.item_name, i.item_photo
        FROM purchase_item pi
        JOIN item i ON pi.item_num = i.item_num
        WHERE pi.purchase_num = #{purchase_num}
    </select>

    <update id="updateRefundStatus" parameterType="map">
        UPDATE purchase
        SET pay_status = #{status}
        WHERE imp_uid = #{impUid}
    </update>

    <update id="updateDeliveryStatus" parameterType="map">
        UPDATE purchase
        SET delivery_status = #{deliveryStatus}
        WHERE purchase_num = #{purchaseNum}
    </update>

    <select id="getAllPurchases" resultType="kr.spring.goods.vo.PurchaseVO">
        SELECT p.purchase_num, p.mem_num, p.item_num, i.item_name, i.item_photo, p.imp_uid, p.pay_price AS amount, p.pay_date AS payDate, p.pay_status AS payStatus, p.delivery_status AS deliveryStatus
        FROM purchase p
        JOIN item i ON p.item_num = i.item_num
    </select>
    
   <insert id="insertPurchaseForCart" parameterType="kr.spring.goods.vo.PurchaseVO" useGeneratedKeys="true" keyProperty="purchaseNum">
    INSERT INTO purchase
    (purchase_num, mem_num, imp_uid, pay_price, pay_date, pay_status, item_num, delivery_status)
    VALUES
    (purchase_seq.nextval, #{memNum}, #{imp_uid}, #{amount}, SYSDATE, #{status}, 0, '배송 준비 중')
</insert>

<insert id="insertPurchaseItem" parameterType="kr.spring.cart.vo.CartVO">
    INSERT INTO purchase_item
    (purchase_item_num, purchase_num, item_num, cart_quantity, item_price)
    VALUES
    (purchase_item_seq.nextval, #{purchase_num}, #{item_num}, #{cart_quantity}, #{price})
</insert>

</mapper>